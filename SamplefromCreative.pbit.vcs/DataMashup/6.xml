<?xml version='1.0' encoding='utf-8'?>
<LocalPackageMetadataFile xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Items>
    <Item>
      <ItemLocation>
        <ItemType>AllFormulas</ItemType>
        <ItemPath/>
      </ItemLocation>
      <StableEntries>
        <Entry Type="IsTypeDetectionEnabled" Value="sTrue"/>
        <Entry Type="RunBackgroundAnalysis" Value="sFalse"/>
      </StableEntries>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Association</ItemPath>
      </ItemLocation>
      <StableEntries>
        <Entry Type="IsPrivate" Value="l0"/>
        <Entry Type="IsDirectQuery" Value="l0"/>
        <Entry Type="RelationshipInfoContainer" Value="s{&quot;columnCount&quot;:6,&quot;keyColumnNames&quot;:[],&quot;queryRelationships&quot;:[],&quot;columnIdentities&quot;:[&quot;Section1/Association/Changed Type.{RuleID,0}&quot;,&quot;Section1/Association/Changed Type.{LeftItemSetId,1}&quot;,&quot;Section1/Association/Changed Type.{RightItemSetId,2}&quot;,&quot;Section1/Association/Changed Type.{Probability,3}&quot;,&quot;Section1/Association/Changed Type.{Importance,4}&quot;,&quot;Section1/Association/Changed Type.{Support,5}&quot;],&quot;ColumnCount&quot;:6,&quot;KeyColumnNames&quot;:[],&quot;ColumnIdentities&quot;:[&quot;Section1/Association/Changed Type.{RuleID,0}&quot;,&quot;Section1/Association/Changed Type.{LeftItemSetId,1}&quot;,&quot;Section1/Association/Changed Type.{RightItemSetId,2}&quot;,&quot;Section1/Association/Changed Type.{Probability,3}&quot;,&quot;Section1/Association/Changed Type.{Importance,4}&quot;,&quot;Section1/Association/Changed Type.{Support,5}&quot;],&quot;RelationshipInfo&quot;:[]}"/>
        <Entry Type="FillColumnNames" Value="s[&quot;RuleID&quot;,&quot;LeftItemSetId&quot;,&quot;RightItemSetId&quot;,&quot;Probability&quot;,&quot;Importance&quot;,&quot;Support&quot;]"/>
        <Entry Type="IsLastAnalysisServicesFormulaTextCollection" Value="l1"/>
        <Entry Type="LastAnalysisServicesFormulaText" Value="s{&quot;IncludesReferencedQueries&quot;:true,&quot;RootFormulaText&quot;:&quot;let\r\n    Source = Excel.Workbook(File.Contents(\&quot;C:\\Users\\AmaniBenHadjHassen\\Documents\\Sales \u0026 Marketing Datas.xlsx\&quot;), null, true),\r\n    Association_Sheet = Source{[Item=\&quot;Association\&quot;,Kind=\&quot;Sheet\&quot;]}[Data],\r\n    #\&quot;Promoted Headers\&quot; = Table.PromoteHeaders(Association_Sheet, [PromoteAllScalars=true]),\r\n    #\&quot;Changed Type\&quot; = Table.TransformColumnTypes(#\&quot;Promoted Headers\&quot;,{{\&quot;RuleID\&quot;, Int64.Type}, {\&quot;LeftItemSetId\&quot;, Int64.Type}, {\&quot;RightItemSetId\&quot;, Int64.Type}, {\&quot;Probability\&quot;, type number}, {\&quot;Importance\&quot;, type number}, {\&quot;Support\&quot;, Int64.Type}}),\r\n    #\&quot;Inserted Merged Column\&quot; = Table.AddColumn(#\&quot;Changed Type\&quot;, \&quot;Merged\&quot;, each Text.Combine({Text.From([LeftItemSetId], \&quot;en-CA\&quot;), Text.From([RightItemSetId], \&quot;en-CA\&quot;)}, \&quot;\&quot;), type text),\r\n    #\&quot;Removed Duplicates\&quot; = Table.Distinct(#\&quot;Inserted Merged Column\&quot;, {\&quot;Merged\&quot;}),\r\n    #\&quot;Removed Columns\&quot; = Table.RemoveColumns(#\&quot;Removed Duplicates\&quot;,{\&quot;Merged\&quot;})\r\nin\r\n    #\&quot;Removed Columns\&quot;&quot;,&quot;ReferencedQueriesFormulaText&quot;:{}}"/>
        <Entry Type="LoadedToAnalysisServices" Value="l1"/>
        <Entry Type="ResultType" Value="sTable"/>
        <Entry Type="BufferNextRefresh" Value="l0"/>
        <Entry Type="NavigationStepName" Value="sNavigation"/>
      </StableEntries>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Association/Source</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Association/Association_Sheet</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Association/Promoted%20Headers</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Association/Changed%20Type</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Association/Inserted%20Merged%20Column</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Association/Removed%20Duplicates</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Association/Removed%20Columns</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Sales</ItemPath>
      </ItemLocation>
      <StableEntries>
        <Entry Type="IsPrivate" Value="l0"/>
        <Entry Type="IsDirectQuery" Value="l0"/>
        <Entry Type="RelationshipInfoContainer" Value="s{&quot;columnCount&quot;:7,&quot;keyColumnNames&quot;:[],&quot;queryRelationships&quot;:[],&quot;columnIdentities&quot;:[&quot;Section1/Sales/Changed Type1.{ProductID,0}&quot;,&quot;Section1/Sales/Changed Type1.{StoreID,1}&quot;,&quot;Section1/Sales/Changed Type1.{Status,2}&quot;,&quot;Section1/Sales/Changed Type1.{ID,3}&quot;,&quot;Section1/Sales/Changed Type1.{Unit,4}&quot;,&quot;Section1/Sales/Changed Type1.{Amount,5}&quot;,&quot;Section1/Sales/Changed Type1.{Date,6}&quot;],&quot;ColumnCount&quot;:7,&quot;KeyColumnNames&quot;:[],&quot;ColumnIdentities&quot;:[&quot;Section1/Sales/Changed Type1.{ProductID,0}&quot;,&quot;Section1/Sales/Changed Type1.{StoreID,1}&quot;,&quot;Section1/Sales/Changed Type1.{Status,2}&quot;,&quot;Section1/Sales/Changed Type1.{ID,3}&quot;,&quot;Section1/Sales/Changed Type1.{Unit,4}&quot;,&quot;Section1/Sales/Changed Type1.{Amount,5}&quot;,&quot;Section1/Sales/Changed Type1.{Date,6}&quot;],&quot;RelationshipInfo&quot;:[]}"/>
        <Entry Type="FillColumnNames" Value="s[&quot;ProductID&quot;,&quot;StoreID&quot;,&quot;Status&quot;,&quot;ID&quot;,&quot;Unit&quot;,&quot;Amount&quot;,&quot;Date&quot;]"/>
        <Entry Type="LastAnalysisServicesFormulaText" Value="s{&quot;IncludesReferencedQueries&quot;:true,&quot;RootFormulaText&quot;:&quot;let\r\n    Source = Excel.Workbook(File.Contents(\&quot;C:\\Users\\AmaniBenHadjHassen\\Documents\\Sales \u0026 Marketing Datas.xlsx\&quot;), null, true),\r\n    Sales_Sheet = Source{[Item=\&quot;Sales\&quot;,Kind=\&quot;Sheet\&quot;]}[Data],\r\n    #\&quot;Promoted Headers1\&quot; = Table.PromoteHeaders(Sales_Sheet, [PromoteAllScalars=true]),\r\n    #\&quot;Changed Type1\&quot; = Table.TransformColumnTypes(#\&quot;Promoted Headers1\&quot;,{{\&quot;ProductID\&quot;, Int64.Type}, {\&quot;StoreID\&quot;, Int64.Type}, {\&quot;Status\&quot;, type text}, {\&quot;ID\&quot;, Int64.Type}, {\&quot;Unit\&quot;, Int64.Type}, {\&quot;Amount\&quot;, Currency.Type}, {\&quot;Date\&quot;, type date}})\r\nin\r\n    #\&quot;Changed Type1\&quot;&quot;,&quot;ReferencedQueriesFormulaText&quot;:{}}"/>
        <Entry Type="IsLastAnalysisServicesFormulaTextCollection" Value="l1"/>
        <Entry Type="LoadedToAnalysisServices" Value="l1"/>
        <Entry Type="NameUpdatedAfterFill" Value="l1"/>
        <Entry Type="ResultType" Value="sTable"/>
        <Entry Type="NavigationStepName" Value="sNavigation"/>
        <Entry Type="BufferNextRefresh" Value="l0"/>
      </StableEntries>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Sales/Source</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Sales/Sales_Sheet</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Sales/Promoted%20Headers1</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Sales/Changed%20Type1</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Store</ItemPath>
      </ItemLocation>
      <StableEntries>
        <Entry Type="IsPrivate" Value="l0"/>
        <Entry Type="IsDirectQuery" Value="l0"/>
        <Entry Type="FillColumnNames" Value="s[&quot;StoreID&quot;,&quot;Store&quot;,&quot;Type&quot;,&quot;Longitude&quot;,&quot;Latitude&quot;,&quot;image&quot;]"/>
        <Entry Type="RelationshipInfoContainer" Value="s{&quot;columnCount&quot;:6,&quot;keyColumnNames&quot;:[],&quot;queryRelationships&quot;:[],&quot;columnIdentities&quot;:[&quot;Section1/Store/Changed Type.{ManufacturerID,0}&quot;,&quot;Section1/Store/Changed Type.{Manufacturer,1}&quot;,&quot;Section1/Store/Changed Type.{Type,2}&quot;,&quot;Section1/Store/Changed Type.{Longitude,3}&quot;,&quot;Section1/Store/Changed Type.{Latitude,4}&quot;,&quot;Section1/Store/Changed Type.{image,5}&quot;],&quot;ColumnCount&quot;:6,&quot;KeyColumnNames&quot;:[],&quot;ColumnIdentities&quot;:[&quot;Section1/Store/Changed Type.{ManufacturerID,0}&quot;,&quot;Section1/Store/Changed Type.{Manufacturer,1}&quot;,&quot;Section1/Store/Changed Type.{Type,2}&quot;,&quot;Section1/Store/Changed Type.{Longitude,3}&quot;,&quot;Section1/Store/Changed Type.{Latitude,4}&quot;,&quot;Section1/Store/Changed Type.{image,5}&quot;],&quot;RelationshipInfo&quot;:[]}"/>
        <Entry Type="LastAnalysisServicesFormulaText" Value="s{&quot;IncludesReferencedQueries&quot;:true,&quot;RootFormulaText&quot;:&quot;let\r\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\&quot;bZLNasNADITfxec0SPsjrY5paaFQSkohl5DDus3B4NjUsUsfv6tk7VKyJ8sLn0Yz0n5fYbWqNnUdz+n7+DMehy62qbwLvGZ21tv043At5MlKqqvDal8Zhdrma2oKFIrx2tWZNaBxxs2UtrqPQx1vIRJvxWQpH4TCDCn9HtvvqTSgMyySKUT6k/KpeIonVXru/jECQYAzA44uo14YSsXLsS/JMFp3RYJFNn5GtM8udpvh/HlsS6D3EK4gpwBhAfXxNY7TUMrCWnA5dnZgYHGlVrexLdmiQCZkW2yQabGFoFQzTKdbqQBANsfOQF4WKVR+259KlJcgIVMklI5kofT1bWrq0rYCIVieY0z7Ws4J1e1D3439uS9Ys4HAzJxmunA67q75GPuhKWXCHn3eG4ulfFSHXw==\&quot;, BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [ManufacturerID = _t, Manufacturer = _t, Type = _t, Longitude = _t, Latitude = _t, image = _t]),\r\n    #\&quot;Changed Type\&quot; = Table.TransformColumnTypes(Source,{{\&quot;ManufacturerID\&quot;, Int64.Type}, {\&quot;Manufacturer\&quot;, type text}, {\&quot;Type\&quot;, type text}, {\&quot;Longitude\&quot;, type number}, {\&quot;Latitude\&quot;, type number}, {\&quot;image\&quot;, type text}}),\r\n    #\&quot;Renamed Columns\&quot; = Table.RenameColumns(#\&quot;Changed Type\&quot;,{{\&quot;ManufacturerID\&quot;, \&quot;StoreID\&quot;}, {\&quot;Manufacturer\&quot;, \&quot;Store\&quot;}})\r\nin\r\n    #\&quot;Renamed Columns\&quot;&quot;,&quot;ReferencedQueriesFormulaText&quot;:{}}"/>
        <Entry Type="IsLastAnalysisServicesFormulaTextCollection" Value="l1"/>
        <Entry Type="LoadedToAnalysisServices" Value="l1"/>
        <Entry Type="ResultType" Value="sTable"/>
        <Entry Type="NameUpdatedAfterFill" Value="l1"/>
        <Entry Type="NavigationStepName" Value="sNavigation"/>
        <Entry Type="BufferNextRefresh" Value="l0"/>
      </StableEntries>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Store/Source</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Store/Changed%20Type</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Store/Renamed%20Columns</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Calendar</ItemPath>
      </ItemLocation>
      <StableEntries>
        <Entry Type="IsPrivate" Value="l0"/>
        <Entry Type="IsDirectQuery" Value="l0"/>
        <Entry Type="FillColumnNames" Value="s[&quot;Date&quot;,&quot;Week&quot;,&quot;Month&quot;,&quot;MonthSort&quot;]"/>
        <Entry Type="RelationshipInfoContainer" Value="s{&quot;columnCount&quot;:4,&quot;keyColumnNames&quot;:[],&quot;queryRelationships&quot;:[],&quot;columnIdentities&quot;:[&quot;Section1/Calendar/Changed Type1.{Date,0}&quot;,&quot;Section1/Calendar/Changed Type.{Week,1}&quot;,&quot;Section1/Calendar/Changed Type.{Month Name,2}&quot;,&quot;Section1/Calendar/Changed Type.{MonthSort,3}&quot;],&quot;ColumnCount&quot;:4,&quot;KeyColumnNames&quot;:[],&quot;ColumnIdentities&quot;:[&quot;Section1/Calendar/Changed Type1.{Date,0}&quot;,&quot;Section1/Calendar/Changed Type.{Week,1}&quot;,&quot;Section1/Calendar/Changed Type.{Month Name,2}&quot;,&quot;Section1/Calendar/Changed Type.{MonthSort,3}&quot;],&quot;RelationshipInfo&quot;:[]}"/>
        <Entry Type="IsLastAnalysisServicesFormulaTextCollection" Value="l1"/>
        <Entry Type="LastAnalysisServicesFormulaText" Value="s{&quot;IncludesReferencedQueries&quot;:true,&quot;RootFormulaText&quot;:&quot;let\r\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\&quot;fZSxisMwDIZfJWQuqSQ7dtztlg6FPkHpkIMbrxyFG+7tq4vcwD9I4IQUvg/kfk5ut5H4qEuI28ByItI1rNPwPY2HkfW6rI/+xOP9oHzxeQFeNp6Tzyfg08YL+XwGPhtffX4Gfrb5dR5x+KLX+euz76TY/OTzFfhqfPX5BfjF5s8+34Bv+/zJ60V6u67P/tfqz/cOXIPR4H0PriFoyL4L10hoWOfEgZHRsNKkU2XP+E/98fPsh4StNefAKGhYbeHAqGhYb1kCY0HDitN81OUYbdv5Xz+8bM1ZfEMIDOnNW2AwGtZcSmAIGtZcj61+DBxje7V/H/2lEmtOLTAyGtacS2DMaFhzSYFR0LDmiQKjoqHN7y8=\&quot;, BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [Date = _t, Week = _t, #\&quot;Month Name\&quot; = _t, MonthSort = _t, #\&quot;Week of Year\&quot; = _t]),\r\n    #\&quot;Changed Type\&quot; = Table.TransformColumnTypes(Source,{{\&quot;Date\&quot;, type datetime}, {\&quot;Week\&quot;, Int64.Type}, {\&quot;Month Name\&quot;, type text}, {\&quot;MonthSort\&quot;, Int64.Type}, {\&quot;Week of Year\&quot;, Int64.Type}}),\r\n    #\&quot;Renamed Columns\&quot; = Table.RenameColumns(#\&quot;Changed Type\&quot;,{{\&quot;Month Name\&quot;, \&quot;Month\&quot;}}),\r\n    #\&quot;Changed Type1\&quot; = Table.TransformColumnTypes(#\&quot;Renamed Columns\&quot;,{{\&quot;Date\&quot;, type date}}),\r\n    #\&quot;Removed Columns\&quot; = Table.RemoveColumns(#\&quot;Changed Type1\&quot;,{\&quot;Week of Year\&quot;})\r\nin\r\n    #\&quot;Removed Columns\&quot;&quot;,&quot;ReferencedQueriesFormulaText&quot;:{}}"/>
        <Entry Type="LoadedToAnalysisServices" Value="l1"/>
        <Entry Type="BufferNextRefresh" Value="l0"/>
        <Entry Type="ResultType" Value="sTable"/>
        <Entry Type="NameUpdatedAfterFill" Value="l1"/>
        <Entry Type="NavigationStepName" Value="sNavigation"/>
      </StableEntries>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Calendar/Source</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Calendar/Changed%20Type</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Calendar/Renamed%20Columns</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Calendar/Changed%20Type1</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Calendar/Removed%20Columns</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Analysis%20DAX</ItemPath>
      </ItemLocation>
      <StableEntries>
        <Entry Type="IsPrivate" Value="l0"/>
        <Entry Type="IsDirectQuery" Value="l0"/>
        <Entry Type="FillColumnNames" Value="s[&quot;Column1&quot;]"/>
        <Entry Type="RelationshipInfoContainer" Value="s{&quot;columnCount&quot;:1,&quot;keyColumnNames&quot;:[],&quot;queryRelationships&quot;:[],&quot;columnIdentities&quot;:[&quot;Section1/Analysis DAX (2)/Changed Type.{Column1,0}&quot;],&quot;ColumnCount&quot;:1,&quot;KeyColumnNames&quot;:[],&quot;ColumnIdentities&quot;:[&quot;Section1/Analysis DAX (2)/Changed Type.{Column1,0}&quot;],&quot;RelationshipInfo&quot;:[]}"/>
        <Entry Type="IsLastAnalysisServicesFormulaTextCollection" Value="l1"/>
        <Entry Type="LastAnalysisServicesFormulaText" Value="s{&quot;IncludesReferencedQueries&quot;:true,&quot;RootFormulaText&quot;:&quot;let\r\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\&quot;i44FAA==\&quot;, BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [Column1 = _t]),\r\n    #\&quot;Changed Type\&quot; = Table.TransformColumnTypes(Source,{{\&quot;Column1\&quot;, type text}}),\r\n    #\&quot;Removed Columns\&quot; = Table.RemoveColumns(#\&quot;Changed Type\&quot;,{\&quot;Column1\&quot;})\r\nin\r\n    #\&quot;Removed Columns\&quot;&quot;,&quot;ReferencedQueriesFormulaText&quot;:{}}"/>
        <Entry Type="LoadedToAnalysisServices" Value="l1"/>
        <Entry Type="ResultType" Value="sTable"/>
        <Entry Type="NameUpdatedAfterFill" Value="l1"/>
        <Entry Type="NavigationStepName" Value="sNavigation"/>
        <Entry Type="BufferNextRefresh" Value="l0"/>
      </StableEntries>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Analysis%20DAX/Source</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Analysis%20DAX/Changed%20Type</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Analysis%20DAX/Removed%20Columns</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Design%20DAX</ItemPath>
      </ItemLocation>
      <StableEntries>
        <Entry Type="IsPrivate" Value="l0"/>
        <Entry Type="IsDirectQuery" Value="l0"/>
        <Entry Type="RelationshipInfoContainer" Value="s{&quot;columnCount&quot;:0,&quot;keyColumnNames&quot;:[],&quot;queryRelationships&quot;:[],&quot;columnIdentities&quot;:[],&quot;ColumnCount&quot;:0,&quot;KeyColumnNames&quot;:[],&quot;ColumnIdentities&quot;:[],&quot;RelationshipInfo&quot;:[]}"/>
        <Entry Type="FillColumnNames" Value="s[]"/>
        <Entry Type="IsLastAnalysisServicesFormulaTextCollection" Value="l1"/>
        <Entry Type="LastAnalysisServicesFormulaText" Value="s{&quot;IncludesReferencedQueries&quot;:true,&quot;RootFormulaText&quot;:&quot;let\r\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\&quot;i44FAA==\&quot;, BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [Column1 = _t]),\r\n    #\&quot;Changed Type\&quot; = Table.TransformColumnTypes(Source,{{\&quot;Column1\&quot;, type text}}),\r\n    #\&quot;Removed Columns\&quot; = Table.RemoveColumns(#\&quot;Changed Type\&quot;,{\&quot;Column1\&quot;})\r\nin\r\n    #\&quot;Removed Columns\&quot;&quot;,&quot;ReferencedQueriesFormulaText&quot;:{}}"/>
        <Entry Type="LoadedToAnalysisServices" Value="l1"/>
        <Entry Type="ResultType" Value="sTable"/>
        <Entry Type="NameUpdatedAfterFill" Value="l1"/>
        <Entry Type="NavigationStepName" Value="sNavigation"/>
        <Entry Type="BufferNextRefresh" Value="l0"/>
      </StableEntries>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Design%20DAX/Source</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Design%20DAX/Changed%20Type</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Design%20DAX/Removed%20Columns</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Customer</ItemPath>
      </ItemLocation>
      <StableEntries>
        <Entry Type="IsPrivate" Value="l0"/>
        <Entry Type="IsDirectQuery" Value="l0"/>
        <Entry Type="LastAnalysisServicesFormulaText" Value="s{&quot;IncludesReferencedQueries&quot;:true,&quot;RootFormulaText&quot;:&quot;let\r\n    Source = Excel.Workbook(File.Contents(\&quot;C:\\Users\\AmaniBenHadjHassen\\Documents\\Sales \u0026 Marketing Datas.xlsx\&quot;), null, true),\r\n    Data_Sheet = Source{[Item=\&quot;Data\&quot;,Kind=\&quot;Sheet\&quot;]}[Data],\r\n    #\&quot;Promoted Headers\&quot; = Table.PromoteHeaders(Data_Sheet, [PromoteAllScalars=true]),\r\n    #\&quot;Changed Type\&quot; = Table.TransformColumnTypes(#\&quot;Promoted Headers\&quot;,{{\&quot;ID\&quot;, Int64.Type}, {\&quot;Unit\&quot;, Int64.Type}, {\&quot;Gender\&quot;, type text}, {\&quot;Age\&quot;, type text}}),\r\n    #\&quot;Replaced Value\&quot; = Table.ReplaceValue(#\&quot;Changed Type\&quot;,\&quot;M\&quot;,\&quot;Male\&quot;,Replacer.ReplaceText,{\&quot;Gender\&quot;}),\r\n    #\&quot;Replaced Value1\&quot; = Table.ReplaceValue(#\&quot;Replaced Value\&quot;,\&quot;F\&quot;,\&quot;Female\&quot;,Replacer.ReplaceText,{\&quot;Gender\&quot;})\r\nin\r\n    #\&quot;Replaced Value1\&quot;&quot;,&quot;ReferencedQueriesFormulaText&quot;:{}}"/>
        <Entry Type="IsLastAnalysisServicesFormulaTextCollection" Value="l1"/>
        <Entry Type="LoadedToAnalysisServices" Value="l1"/>
        <Entry Type="NameUpdatedAfterFill" Value="l1"/>
        <Entry Type="ResultType" Value="sTable"/>
        <Entry Type="NavigationStepName" Value="sNavigation"/>
        <Entry Type="BufferNextRefresh" Value="l0"/>
        <Entry Type="FillErrorCode" Value="sUnknown"/>
        <Entry Type="FillLastUpdated" Value="d2019-10-15T17:55:41.4585856Z"/>
        <Entry Type="FillColumnNames" Value="s[&quot;ID&quot;,&quot;Unit&quot;,&quot;Gender&quot;,&quot;Product&quot;,&quot;Category&quot;,&quot;Segment&quot;,&quot;Store&quot;,&quot;Type&quot;,&quot;Issue&quot;,&quot;Promotion&quot;,&quot;Amount&quot;,&quot;Age&quot;,&quot;Price Range&quot;]"/>
        <Entry Type="RelationshipInfoContainer" Value="s{&quot;columnCount&quot;:13,&quot;keyColumnNames&quot;:[],&quot;queryRelationships&quot;:[],&quot;columnIdentities&quot;:[&quot;Section1/Customer/Changed Type.{ID,0}&quot;,&quot;Section1/Customer/Changed Type.{Unit,1}&quot;,&quot;Section1/Customer/Replaced Value1.{Gender,2}&quot;,&quot;Section1/Customer/Promoted Headers.{Product,3}&quot;,&quot;Section1/Customer/Promoted Headers.{Category,4}&quot;,&quot;Section1/Customer/Promoted Headers.{Segment,5}&quot;,&quot;Section1/Customer/Promoted Headers.{Store,6}&quot;,&quot;Section1/Customer/Promoted Headers.{Type,7}&quot;,&quot;Section1/Customer/Promoted Headers.{Issue,8}&quot;,&quot;Section1/Customer/Promoted Headers.{Promotion,9}&quot;,&quot;Section1/Customer/Promoted Headers.{Amount,10}&quot;,&quot;Section1/Customer/Changed Type.{Age,11}&quot;,&quot;Section1/Customer/Promoted Headers.{Price Range,12}&quot;],&quot;ColumnCount&quot;:13,&quot;KeyColumnNames&quot;:[],&quot;ColumnIdentities&quot;:[&quot;Section1/Customer/Changed Type.{ID,0}&quot;,&quot;Section1/Customer/Changed Type.{Unit,1}&quot;,&quot;Section1/Customer/Replaced Value1.{Gender,2}&quot;,&quot;Section1/Customer/Promoted Headers.{Product,3}&quot;,&quot;Section1/Customer/Promoted Headers.{Category,4}&quot;,&quot;Section1/Customer/Promoted Headers.{Segment,5}&quot;,&quot;Section1/Customer/Promoted Headers.{Store,6}&quot;,&quot;Section1/Customer/Promoted Headers.{Type,7}&quot;,&quot;Section1/Customer/Promoted Headers.{Issue,8}&quot;,&quot;Section1/Customer/Promoted Headers.{Promotion,9}&quot;,&quot;Section1/Customer/Promoted Headers.{Amount,10}&quot;,&quot;Section1/Customer/Changed Type.{Age,11}&quot;,&quot;Section1/Customer/Promoted Headers.{Price Range,12}&quot;],&quot;RelationshipInfo&quot;:[]}"/>
      </StableEntries>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Customer/Source</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Customer/Data_Sheet</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Customer/Promoted%20Headers</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Customer/Changed%20Type</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Customer/Replaced%20Value</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Customer/Replaced%20Value1</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Issues%20and%20Promotions</ItemPath>
      </ItemLocation>
      <StableEntries>
        <Entry Type="IsPrivate" Value="l0"/>
        <Entry Type="IsDirectQuery" Value="l0"/>
        <Entry Type="ResultType" Value="sTable"/>
        <Entry Type="FillColumnNames" Value="s[&quot;ID&quot;,&quot;Issue&quot;,&quot;Promotion&quot;]"/>
        <Entry Type="RelationshipInfoContainer" Value="s{&quot;columnCount&quot;:3,&quot;keyColumnNames&quot;:[],&quot;queryRelationships&quot;:[],&quot;columnIdentities&quot;:[&quot;Section1/Issues and Promotions/Changed Type.{ID,0}&quot;,&quot;Section1/Issues and Promotions/Changed Type.{Issue,1}&quot;,&quot;Section1/Issues and Promotions/Changed Type.{Promotion,2}&quot;],&quot;ColumnCount&quot;:3,&quot;KeyColumnNames&quot;:[],&quot;ColumnIdentities&quot;:[&quot;Section1/Issues and Promotions/Changed Type.{ID,0}&quot;,&quot;Section1/Issues and Promotions/Changed Type.{Issue,1}&quot;,&quot;Section1/Issues and Promotions/Changed Type.{Promotion,2}&quot;],&quot;RelationshipInfo&quot;:[]}"/>
        <Entry Type="IsLastAnalysisServicesFormulaTextCollection" Value="l1"/>
        <Entry Type="LastAnalysisServicesFormulaText" Value="s{&quot;IncludesReferencedQueries&quot;:true,&quot;RootFormulaText&quot;:&quot;let\r\n    Source = Excel.Workbook(File.Contents(\&quot;C:\\Users\\AmaniBenHadjHassen\\Documents\\Sales \u0026 Marketing Datas.xlsx\&quot;), null, true),\r\n    #\&quot;Issues and Promotions_Sheet\&quot; = Source{[Item=\&quot;Issues and Promotions\&quot;,Kind=\&quot;Sheet\&quot;]}[Data],\r\n    #\&quot;Promoted Headers\&quot; = Table.PromoteHeaders(#\&quot;Issues and Promotions_Sheet\&quot;, [PromoteAllScalars=true]),\r\n    #\&quot;Changed Type\&quot; = Table.TransformColumnTypes(#\&quot;Promoted Headers\&quot;,{{\&quot;ID\&quot;, Int64.Type}, {\&quot;Issue\&quot;, type text}, {\&quot;Promotion\&quot;, type text}})\r\nin\r\n    #\&quot;Changed Type\&quot;&quot;,&quot;ReferencedQueriesFormulaText&quot;:{}}"/>
        <Entry Type="LoadedToAnalysisServices" Value="l1"/>
        <Entry Type="BufferNextRefresh" Value="l0"/>
        <Entry Type="NavigationStepName" Value="sNavigation"/>
      </StableEntries>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Issues%20and%20Promotions/Source</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Issues%20and%20Promotions/Issues%20and%20Promotions_Sheet</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Issues%20and%20Promotions/Promoted%20Headers</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Issues%20and%20Promotions/Changed%20Type</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/STable</ItemPath>
      </ItemLocation>
      <StableEntries>
        <Entry Type="IsPrivate" Value="l0"/>
        <Entry Type="IsDirectQuery" Value="l0"/>
        <Entry Type="FillColumnNames" Value="s[&quot;Metric&quot;,&quot;Sort&quot;]"/>
        <Entry Type="RelationshipInfoContainer" Value="s{&quot;columnCount&quot;:2,&quot;keyColumnNames&quot;:[],&quot;queryRelationships&quot;:[],&quot;columnIdentities&quot;:[&quot;Section1/STable/Changed Type.{Metric,0}&quot;,&quot;Section1/STable/Changed Type.{Sort,1}&quot;],&quot;ColumnCount&quot;:2,&quot;KeyColumnNames&quot;:[],&quot;ColumnIdentities&quot;:[&quot;Section1/STable/Changed Type.{Metric,0}&quot;,&quot;Section1/STable/Changed Type.{Sort,1}&quot;],&quot;RelationshipInfo&quot;:[]}"/>
        <Entry Type="LastAnalysisServicesFormulaText" Value="s{&quot;IncludesReferencedQueries&quot;:true,&quot;RootFormulaText&quot;:&quot;let\r\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\&quot;i45Wci4tKkrNK1HwSy1RCE7MSS1W0lEyVIrViVZyrSgpSlQIKMpPyywBChopxcYCAA==\&quot;, BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [Metric = _t, Sort = _t]),\r\n    #\&quot;Changed Type\&quot; = Table.TransformColumnTypes(Source,{{\&quot;Metric\&quot;, type text}, {\&quot;Sort\&quot;, Int64.Type}})\r\nin\r\n    #\&quot;Changed Type\&quot;&quot;,&quot;ReferencedQueriesFormulaText&quot;:{}}"/>
        <Entry Type="IsLastAnalysisServicesFormulaTextCollection" Value="l1"/>
        <Entry Type="LoadedToAnalysisServices" Value="l1"/>
        <Entry Type="BufferNextRefresh" Value="l0"/>
        <Entry Type="ResultType" Value="sTable"/>
        <Entry Type="NameUpdatedAfterFill" Value="l1"/>
      </StableEntries>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/STable/Source</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/STable/Changed%20Type</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Tooltip%20Info</ItemPath>
      </ItemLocation>
      <StableEntries>
        <Entry Type="IsPrivate" Value="l0"/>
        <Entry Type="IsDirectQuery" Value="l0"/>
        <Entry Type="RelationshipInfoContainer" Value="s{&quot;columnCount&quot;:3,&quot;keyColumnNames&quot;:[],&quot;queryRelationships&quot;:[],&quot;columnIdentities&quot;:[&quot;Section1/Tooltip Info/Changed Type.{nombre,0}&quot;,&quot;Section1/Tooltip Info/Changed Type.{URL,1}&quot;,&quot;Section1/Tooltip Info/Changed Type.{DLINK,2}&quot;],&quot;ColumnCount&quot;:3,&quot;KeyColumnNames&quot;:[],&quot;ColumnIdentities&quot;:[&quot;Section1/Tooltip Info/Changed Type.{nombre,0}&quot;,&quot;Section1/Tooltip Info/Changed Type.{URL,1}&quot;,&quot;Section1/Tooltip Info/Changed Type.{DLINK,2}&quot;],&quot;RelationshipInfo&quot;:[]}"/>
        <Entry Type="FillColumnNames" Value="s[&quot;nombre&quot;,&quot;URL&quot;,&quot;DLINK&quot;]"/>
        <Entry Type="IsLastAnalysisServicesFormulaTextCollection" Value="l1"/>
        <Entry Type="LastAnalysisServicesFormulaText" Value="s{&quot;IncludesReferencedQueries&quot;:true,&quot;RootFormulaText&quot;:&quot;let\r\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\&quot;pZJBT8IwGIb/SrMz8o2Wjs0bARLloEjkYAiHbpRtGWtnW8Dx651pQnBoCnprmqd93u/Nt1x6T9wgzbZcozuUMMNTqWoUK86KtTwIr+NlxlT6HiAvWZofuep+HbjOWFJ0E1k292mEMQQhjeCt3i/iXTfNN62H5zxUpeVSb9X5HkAbqfjt9j6QHgngMRTJ/Nlpl5a7tBe8RrnYbHdcJFzpa+09oNj3Ybpm40XltG8tZ+1zbnZK/K/6PlAa+MDHU1nE7uEt19a3ikfXywc4CEHF0xf24ZZbri3/Y+8YaN8PIA9mRZa5d85y526kmtIbvzjtwF6jQ8YMuvjr1xAECKGQPZTvi6Mzg7DcTxlu1GKIKA5hXkyS4at7dstZ70weuBpW1dU9E8DRIIJ1PZqQkXtGyzWu1Sc=\&quot;, BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [nombre = _t, URL = _t, DLINK = _t]),\r\n    #\&quot;Changed Type\&quot; = Table.TransformColumnTypes(Source,{{\&quot;nombre\&quot;, type text}, {\&quot;URL\&quot;, type text}, {\&quot;DLINK\&quot;, type text}})\r\nin\r\n    #\&quot;Changed Type\&quot;&quot;,&quot;ReferencedQueriesFormulaText&quot;:{}}"/>
        <Entry Type="LoadedToAnalysisServices" Value="l1"/>
        <Entry Type="NameUpdatedAfterFill" Value="l1"/>
        <Entry Type="ResultType" Value="sTable"/>
        <Entry Type="BufferNextRefresh" Value="l0"/>
        <Entry Type="NavigationStepName" Value="sNavigation"/>
      </StableEntries>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Tooltip%20Info/Source</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Tooltip%20Info/Changed%20Type</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Details</ItemPath>
      </ItemLocation>
      <StableEntries>
        <Entry Type="IsPrivate" Value="l0"/>
        <Entry Type="IsDirectQuery" Value="l0"/>
        <Entry Type="RelationshipInfoContainer" Value="s{&quot;columnCount&quot;:4,&quot;keyColumnNames&quot;:[],&quot;queryRelationships&quot;:[],&quot;columnIdentities&quot;:[&quot;Section1/Details/Source.{Design Factor,0}&quot;,&quot;Section1/Details/Changed Type.{DFSort,1}&quot;,&quot;Section1/Details/Source.{Topic,2}&quot;,&quot;Section1/Details/Changed Type.{TSort,3}&quot;],&quot;ColumnCount&quot;:4,&quot;KeyColumnNames&quot;:[],&quot;ColumnIdentities&quot;:[&quot;Section1/Details/Source.{Design Factor,0}&quot;,&quot;Section1/Details/Changed Type.{DFSort,1}&quot;,&quot;Section1/Details/Source.{Topic,2}&quot;,&quot;Section1/Details/Changed Type.{TSort,3}&quot;],&quot;RelationshipInfo&quot;:[]}"/>
        <Entry Type="FillColumnNames" Value="s[&quot;Design Factor&quot;,&quot;DFSort&quot;,&quot;Topic&quot;,&quot;TSort&quot;]"/>
        <Entry Type="IsLastAnalysisServicesFormulaTextCollection" Value="l1"/>
        <Entry Type="LastAnalysisServicesFormulaText" Value="s{&quot;IncludesReferencedQueries&quot;:true,&quot;RootFormulaText&quot;:&quot;let\r\n    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\&quot;lVXbcpswEP0VDc/OxMF2mjzKgBtNsWEwzmXSPChY2JrIKCNEU/ep39JP65dUK18mDYEQZjxjpLO7hz1npft7By98Esy8wOk5Z+YXxUGCUxLNcGjeXOehV4Ngs3eXEs8iBhYRhzidRMnUhvScOLoJEjQmyA/m39IoNkvD93Bo/yTsWSqNrjl7QWZ51JpzGo1JCFwuOqScykcu2DHzpQ1ZkNPFreXec0J8Fy1S+LJ+be+Qy5NFyUvNCo1CupWVBvhZDe5FYZTAltuYacozJUuZa5NTSFUCetCIvuKrNRTXipa25rAGHSd45pPZV9gddSgb5TnPOBUoVnJZZdoyOP9MYChX0kZ9qUWRWRokE7wzykVjUlLoimv+gwGsrsix64JRhXyqKfJN9xV/rDSXBehclyq4Nb49mNSta3NsqXw5SSVgmkXyqBBIS4SzQ71miaa84JtqY8jy7Ana4tY1MszAoHhPrlkmz/S6PIkF1blUG8A2K5MwIx9bGkMaX2ZbAO8EsdM5J3M7cz1nEuB0kQRz9L3q991z5OEYm/khKQkA4l68F3Qo4ituWjGVS5DKvfwQqtdKVqs1UO23gVMphebPgDtrw+2fv7//IJ/ltBIwBQO3Y8j+CIjpCugPBm1h17ysjLmvGF0yBehhxyL7T0Ep+2nJjT4Z94bkeVv4zZpqRHLAvav1AYcLKra/bL5WeV/RIUWmGC3Zqc92fyC4VfBXwRNeLA05phjSa17+N67Ivue52SygQcNWY0y40EyZbhRAYNhqjrGUTxuqnmC5qyUMs2dBt2jOBMu0GZ+d7hDQag9zCC85fI7xyMTMJtWaFysAdfWJPcfsoQ+Yzi7hWthOtPribZkxtTfL8GOTaJ5ZZFebwE2oKdyDfKdQZ4tIxbLdLTYyDnj4Bw==\&quot;, BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [#\&quot;Design Factor\&quot; = _t, DFSort = _t, Topic = _t, TSort = _t]),\r\n    #\&quot;Changed Type\&quot; = Table.TransformColumnTypes(Source,{{\&quot;DFSort\&quot;, Int64.Type}, {\&quot;TSort\&quot;, Int64.Type}})\r\nin\r\n    #\&quot;Changed Type\&quot;&quot;,&quot;ReferencedQueriesFormulaText&quot;:{}}"/>
        <Entry Type="LoadedToAnalysisServices" Value="l1"/>
        <Entry Type="NameUpdatedAfterFill" Value="l1"/>
        <Entry Type="ResultType" Value="sTable"/>
        <Entry Type="BufferNextRefresh" Value="l0"/>
        <Entry Type="NavigationStepName" Value="sNavigation"/>
      </StableEntries>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Details/Source</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Details/Changed%20Type</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Product</ItemPath>
      </ItemLocation>
      <StableEntries>
        <Entry Type="IsPrivate" Value="l0"/>
        <Entry Type="IsDirectQuery" Value="l0"/>
        <Entry Type="NameUpdatedAfterFill" Value="l1"/>
        <Entry Type="ResultType" Value="sTable"/>
        <Entry Type="BufferNextRefresh" Value="l1"/>
        <Entry Type="FillColumnNames" Value="s[&quot;Product&quot;,&quot;ProductID&quot;,&quot;Category&quot;,&quot;CategoryID&quot;,&quot;Segment&quot;,&quot;SegmentID&quot;,&quot;Product Image&quot;,&quot;Category Image&quot;,&quot;Segement Color&quot;,&quot;Segment image&quot;,&quot;Price&quot;,&quot;Price Range&quot;]"/>
        <Entry Type="RelationshipInfoContainer" Value="s{&quot;columnCount&quot;:12,&quot;keyColumnNames&quot;:[],&quot;queryRelationships&quot;:[],&quot;columnIdentities&quot;:[&quot;Section1/Product/Changed Type.{Product,0}&quot;,&quot;Section1/Product/Changed Type.{ProductID,1}&quot;,&quot;Section1/Product/Changed Type.{Category,2}&quot;,&quot;Section1/Product/Changed Type.{CategoryID,3}&quot;,&quot;Section1/Product/Changed Type.{Segment,4}&quot;,&quot;Section1/Product/Changed Type.{SegmentID,5}&quot;,&quot;Section1/Product/Changed Type.{Product Image,6}&quot;,&quot;Section1/Product/Changed Type.{Category Image,7}&quot;,&quot;Section1/Product/Changed Type.{Segement Color,8}&quot;,&quot;Section1/Product/Changed Type.{Segment image,9}&quot;,&quot;Section1/Product/Changed Type.{Price,10}&quot;,&quot;Section1/Product/Changed Type.{Price Range,11}&quot;],&quot;ColumnCount&quot;:12,&quot;KeyColumnNames&quot;:[],&quot;ColumnIdentities&quot;:[&quot;Section1/Product/Changed Type.{Product,0}&quot;,&quot;Section1/Product/Changed Type.{ProductID,1}&quot;,&quot;Section1/Product/Changed Type.{Category,2}&quot;,&quot;Section1/Product/Changed Type.{CategoryID,3}&quot;,&quot;Section1/Product/Changed Type.{Segment,4}&quot;,&quot;Section1/Product/Changed Type.{SegmentID,5}&quot;,&quot;Section1/Product/Changed Type.{Product Image,6}&quot;,&quot;Section1/Product/Changed Type.{Category Image,7}&quot;,&quot;Section1/Product/Changed Type.{Segement Color,8}&quot;,&quot;Section1/Product/Changed Type.{Segment image,9}&quot;,&quot;Section1/Product/Changed Type.{Price,10}&quot;,&quot;Section1/Product/Changed Type.{Price Range,11}&quot;],&quot;RelationshipInfo&quot;:[]}"/>
        <Entry Type="LastAnalysisServicesFormulaText" Value="s{&quot;IncludesReferencedQueries&quot;:true,&quot;RootFormulaText&quot;:&quot;let\r\n    Source = Excel.Workbook(File.Contents(\&quot;C:\\Users\\AmaniBenHadjHassen\\Documents\\Sales \u0026 Marketing Datas.xlsx\&quot;), null, true),\r\n    Product_Sheet = Source{[Item=\&quot;Product\&quot;,Kind=\&quot;Sheet\&quot;]}[Data],\r\n    #\&quot;Promoted Headers\&quot; = Table.PromoteHeaders(Product_Sheet, [PromoteAllScalars=true]),\r\n    #\&quot;Changed Type\&quot; = Table.TransformColumnTypes(#\&quot;Promoted Headers\&quot;,{{\&quot;Product\&quot;, type text}, {\&quot;ProductID\&quot;, Int64.Type}, {\&quot;Category\&quot;, type text}, {\&quot;CategoryID\&quot;, Int64.Type}, {\&quot;Segment\&quot;, type text}, {\&quot;SegmentID\&quot;, Int64.Type}, {\&quot;Product Image\&quot;, type text}, {\&quot;Category Image\&quot;, type text}, {\&quot;Segement Color\&quot;, type text}, {\&quot;Segment image\&quot;, type text}, {\&quot;Price\&quot;, Int64.Type}, {\&quot;Price Range\&quot;, type text}})\r\nin\r\n    #\&quot;Changed Type\&quot;&quot;,&quot;ReferencedQueriesFormulaText&quot;:{}}"/>
        <Entry Type="IsLastAnalysisServicesFormulaTextCollection" Value="l1"/>
        <Entry Type="LoadedToAnalysisServices" Value="l1"/>
        <Entry Type="NavigationStepName" Value="sNavigation"/>
      </StableEntries>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Product/Source</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Product/Product_Sheet</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Product/Promoted%20Headers</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
    <Item>
      <ItemLocation>
        <ItemType>Formula</ItemType>
        <ItemPath>Section1/Product/Changed%20Type</ItemPath>
      </ItemLocation>
      <StableEntries/>
    </Item>
  </Items>
</LocalPackageMetadataFile>
